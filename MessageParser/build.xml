<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="MessageParser">
    <property environment="env"/>
    <property name="Creator.location" value="../Creator"/>
    <property name="Tests.location" value="../Tests"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="Helper.location" value="../Helper"/>
    <property name="ImageMatcher.location" value="../ImageMatcher"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Helper.classpath">
        <pathelement location="${Helper.location}/bin"/>
        <pathelement location="${Helper.location}/../libraries/commons-text-1.6.jar"/>
        <pathelement location="${Helper.location}/../libraries/log4j-api-2.11.1.jar"/>
        <pathelement location="${Helper.location}/../libraries/log4j-core-2.11.1.jar"/>
    </path>
    <path id="ImageMatcher.classpath">
        <pathelement location="${ImageMatcher.location}/bin"/>
        <path refid="Helper.classpath"/>
        <pathelement location="${ImageMatcher.location}/../libraries/commons-cli-1.4.jar"/>
        <pathelement location="${ImageMatcher.location}/../libraries/jaxen-1.1.1.jar"/>
        <pathelement location="${ImageMatcher.location}/../libraries/dom4j-2.1.1.jar"/>
        <pathelement location="${ImageMatcher.location}/../libraries/log4j-api-2.11.1.jar"/>
        <pathelement location="${ImageMatcher.location}/../libraries/log4j-core-2.11.1.jar"/>
    </path>
    <path id="MessageParser.classpath">
        <pathelement location="bin"/>
        <path refid="Helper.classpath"/>
        <path refid="ImageMatcher.classpath"/>
        <pathelement location="../libraries/dom4j-2.1.1.jar"/>
        <pathelement location="../libraries/jaxen-1.1.1.jar"/>
        <pathelement location="../libraries/commons-text-1.6.jar"/>
        <pathelement location="../libraries/log4j-api-2.11.1.jar"/>
        <pathelement location="../libraries/log4j-core-2.11.1.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall">
        <ant antfile="build.xml" dir="${Helper.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.xml" dir="${ImageMatcher.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="build.xml" dir="${Helper.location}" inheritAll="false" target="build-project"/>
        <ant antfile="build.xml" dir="${ImageMatcher.location}" inheritAll="false" target="build-project"/>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="MessageParser.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects">
        <ant antfile="build.xml" dir="${Creator.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.xml" dir="${Creator.location}" inheritAll="false" target="build"/>
        <ant antfile="build.xml" dir="${Tests.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.xml" dir="${Tests.location}" inheritAll="false" target="build"/>
    </target>
    <target name="WhatsappParserTest.testNextMessage_TextMessage_SeveralLines">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="messageparsertest.WhatsappParserTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="MessageParser.classpath"/>
        </junit>
    </target>
    <target name="WhatsappParserTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="messageparsertest.WhatsappParserTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="MessageParser.classpath"/>
        </junit>
    </target>
    <target name="NameLookupTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="messageparsertest.NameLookupTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="MessageParser.classpath"/>
        </junit>
    </target>
    <target name="messageparser.test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <jvmarg line="-ea"/>
            <classpath refid="MessageParser.classpath"/>
        </junit>
    </target>
    <target name="tests (2)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <jvmarg line="-ea"/>
            <classpath refid="MessageParser.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
